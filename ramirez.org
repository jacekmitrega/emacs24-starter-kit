#+TITLE: Ramirez Emacs Starter Kit Customization
#+OPTIONS: toc:2 num:nil ^:nil

* Misc
** TODO [#B] Nxhtml -- utilities for web development
[[http://ourcomments.org/Emacs/nXhtml/doc/nxhtml.html][Nxhtml]] is a large package of utilities for web development and for
embedding multiple major modes in a single buffer.

Nxhtml is not installed in this version of the starter-kit by default,
for information on installing nxhtml see [[http://www.emacswiki.org/emacs/NxhtmlMode][EmacsWiki-Nxhtml]].

** Associate modes with file extensions
#+begin_src emacs-lisp
(add-to-list 'auto-mode-alist '("COMMIT_EDITMSG$" . diff-mode))
(add-to-list 'auto-mode-alist '("\\.css$" . css-mode))
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.ya?ml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.rb$" . ruby-mode))
(add-to-list 'auto-mode-alist '("Rakefile$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.js\\(on\\)?$" . js2-mode))
;; (add-to-list 'auto-mode-alist '("\\.xml$" . nxml-mode))
#+end_src

* Org
#+begin_src emacs-lisp
  (starter-kit-load "org")
#+end_src
* Python
** Check dependencies
#+begin_src emacs-lisp
  (package-install-needed '(python-mode ipython pymacs))
#+end_src

** python-mode.el
#+begin_src emacs-lisp
  (starter-kit-load "python" "python")
#+end_src

** IPython
#+begin_src emacs-lisp
  (setq py-python-command "ipython")
  (starter-kit-load "python" "ipython")
#+end_src

** lambda-mode
#+begin_src emacs-lisp
  (require 'lambda-mode)
  (add-hook 'python-mode-hook #'lambda-mode 1)
  (add-hook 'lisp-mode-hook #'lambda-mode 1)
  (setq lambda-symbol (string (make-char 'greek-iso8859-7 107)))
#+end_src

* JavaScript
** Check dependencies
#+begin_src emacs-lisp
  (package-install-needed '(js2-mode))
#+end_src

** Load starter-kit js.
#+begin_src emacs-lisp
;  (starter-kit-load "js")
#+end_src

** Selected stuff.
#+begin_src emacs-lisp
(defun starter-kit-pp-json ()
  "Pretty-print the json object following point."
  (interactive)
  (require 'json)
  (let ((json-object (save-excursion (json-read))))
    (switch-to-buffer "*json*")
    (delete-region (point-min) (point-max))
    (insert (pp json-object))
    (goto-char (point-min))))
#+end_src

* Lisp
** Check dependencies
#+begin_src emacs-lisp
  (package-install-needed '(paredit))
#+end_src

** Config
#+begin_src emacs-lisp
  (starter-kit-load "lisp" "keys")
  (starter-kit-load "lisp" "paredit")
  (starter-kit-load "lisp" "parenthesis-faces")
#+end_src

** Dialects
#+begin_src emacs-lisp
  (starter-kit-load "lisp" "emacs-lisp")
;  (starter-kit-load "lisp" "clojure")
;  (starter-kit-load "lisp" "scheme")
;  (starter-kit-load "lisp" "common-lisp")
#+end_src

* eshell
#+begin_src emacs-lisp
  (starter-kit-load "eshell")
#+end_src

