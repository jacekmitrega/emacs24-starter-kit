#+TITLE: Ramirez Emacs Starter Kit Customization
#+OPTIONS: toc:2 num:nil ^:nil

* Theme
** Check dependencies
#+begin_src emacs-lisp
  (dolist (package '(zenburn-theme))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

** Set custom theme load path
(Add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")

** Set default theme
#+begin_src emacs-lisp
(load "zenburn-theme")
#+end_src

* Misc
** Extra elpa repositories
- Melpa :: Milkypostman’s Experimental Lisp Package Repository http://melpa.milkbox.net/
#+begin_src emacs-lisp
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)
#+end_src

** Check dependencies
#+begin_src emacs-lisp
  (dolist (package '(yaml-mode))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

** Window systems -- remove visual cruft                             :visual:
   :PROPERTIES:
   :CUSTOM_ID: window-system
   :END:
#+name: starter-kit-window-view-stuff-recommended
#+begin_src emacs-lisp 
(when window-system
  (tooltip-mode -1)
  (tool-bar-mode -1))
#+end_src

** No Menu Bar                                                       :visual:
You really don't need this; trust me.
#+name: starter-kit-no-menu
#+begin_src emacs-lisp 
(menu-bar-mode -1)
#+end_src

** Column number mode                                                :visual:
(setq column-number-mode t)
** Set browser
Set this to whatever browser you use e.g...
: ;; (setq browse-url-browser-function 'browse-url-firefox)
: ;; (setq browse-url-browser-function 'browse-default-macosx-browser)
: ;; (setq browse-url-browser-function 'browse-default-windows-browser)
: ;; (setq browse-url-browser-function 'browse-default-kde)
: ;; (setq browse-url-browser-function 'browse-default-epiphany)
: ;; (setq browse-url-browser-function 'browse-default-w3m)
: ;; (setq browse-url-browser-function 'browse-url-generic
: ;;       browse-url-generic-program "~/src/conkeror/conkeror")
#+begin_src emacs-lisp
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "browser")
#+end_src

** TODO [#B] Nxhtml -- utilities for web development
[[http://ourcomments.org/Emacs/nXhtml/doc/nxhtml.html][Nxhtml]] is a large package of utilities for web development and for
embedding multiple major modes in a single buffer.

Nxhtml is not installed in this version of the starter-kit by default,
for information on installing nxhtml see [[http://www.emacswiki.org/emacs/NxhtmlMode][EmacsWiki-Nxhtml]].

** Associate modes with file extensions
#+begin_src emacs-lisp
(add-to-list 'auto-mode-alist '("COMMIT_EDITMSG$" . diff-mode))
(add-to-list 'auto-mode-alist '("\\.css$" . css-mode))
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.ya?ml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.rb$" . ruby-mode))
(add-to-list 'auto-mode-alist '("Rakefile$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.js\\(on\\)?$" . js2-mode))
;; (add-to-list 'auto-mode-alist '("\\.xml$" . nxml-mode))
#+end_src

** Keys
- ° :: AltGr + Shift + 0
- € :: AltGr + Shift + 2
- £ :: AltGr + Shift + 3

#+begin_src emacs-lisp
  (defun insert-euro ()
    "Insert a Euro currency symbol in utf-8."
    (interactive)
    (ucs-insert #x20ac))
  (global-set-key (kbd "⅛") 'insert-euro)
#+end_src

* Org
#+begin_src emacs-lisp
  (starter-kit-load "org")
#+end_src
* Python
** Check dependencies
#+begin_src emacs-lisp
  (dolist (package '(python-mode ipython pymacs))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

** python-mode.el
#+begin_src emacs-lisp
  (starter-kit-load "python" "python")
#+end_src

** IPython
#+begin_src emacs-lisp
  (setq py-python-command "ipython")
  (starter-kit-load "python" "ipython")
#+end_src

** lambda-mode
#+begin_src emacs-lisp
  (require 'lambda-mode)
  (add-hook 'python-mode-hook #'lambda-mode 1)
  (setq lambda-symbol (string (make-char 'greek-iso8859-7 107)))
#+end_src

* JavaScript
** Check dependencies
#+begin_src emacs-lisp
  (dolist (package '(js2-mode))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

** Load starter-kit js.
#+begin_src emacs-lisp
;  (starter-kit-load "js")
#+end_src

** Selected stuff.
#+begin_src emacs-lisp
(defun starter-kit-pp-json ()
  "Pretty-print the json object following point."
  (interactive)
  (require 'json)
  (let ((json-object (save-excursion (json-read))))
    (switch-to-buffer "*json*")
    (delete-region (point-min) (point-max))
    (insert (pp json-object))
    (goto-char (point-min))))
#+end_src

* Lisp
** Check dependencies
#+begin_src emacs-lisp
  (dolist (package '(paredit))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

** Config
#+begin_src emacs-lisp
  (starter-kit-load "lisp" "keys")
  (starter-kit-load "lisp" "paredit")
  (starter-kit-load "lisp" "parenthesis-faces")
#+end_src

** Dialects
#+begin_src emacs-lisp
  (starter-kit-load "lisp" "emacs-lisp")
;  (starter-kit-load "lisp" "clojure")
;  (starter-kit-load "lisp" "scheme")
;  (starter-kit-load "lisp" "common-lisp")
#+end_src

* Lua
** Check Dependencies
#+begin_src emacs-lisp
  (dolist (package '(lua-mode))
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

* eshell
#+begin_src emacs-lisp
  (starter-kit-load "eshell")
#+end_src
